# Docker - Build multiple Docker images with service-to-image mapping
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  acrRegistry: 'nagp2024amcart0test0acr0.azurecr.io' # Replace with your ACR name
  azureSubscriptionConnectionString: 'ServiceConnectionAmcart0Test0' # Replace with your ARM connection name
  # serviceImageMappings: 'Catalog/Catalog.API=amcart.catalog.api,Service2=amcart.service2,Service3=amcart.service3' # Service-to-image mapping
  serviceImageMappings: 'Catalog/Catalog.API=amcart.catalog.api' # Service-to-image mapping

stages:
- stage: Build
  displayName: Build images
  jobs:
  - job: BuildImages
    displayName: Build Images
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DockerInstaller@0
      displayName: 'Install Docker'
      inputs:
        dockerVersion: '17.09.0-ce' # Consider using a newer version
    - task: AzureCLI@2
      displayName: 'ACR Login'
      inputs:
        azureSubscription: '$(azureSubscriptionConnectionString)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login --name $(acrRegistry)'
    - script: |
        SERVICE_IMAGE_MAPPINGS="$(serviceImageMappings)"
        SERVICES=(
          "Catalog/Catalog.API"
          "Service2"
          "Service3"
        )
        for SERVICE in "${SERVICES[@]}"; do
          echo "Building Docker image for $SERVICE..."
          dockerfilePath="src/$SERVICE/Dockerfile"
          buildContext="src/$SERVICE"
          MAPPING_PAIRS=$(echo "$SERVICE_IMAGE_MAPPINGS" | tr ',' '\n')
          IMAGE_NAME=""
          for PAIR in $MAPPING_PAIRS; do
            KEY=$(echo "$PAIR" | cut -d '=' -f 1)
            VALUE=$(echo "$PAIR" | cut -d '=' -f 2)
            if [[ "$KEY" == "$SERVICE" ]]; then
              IMAGE_NAME="$VALUE"
              break
            fi
          done
          if [[ -z "$IMAGE_NAME" ]]; then
            echo "Error: Image name not found for service $SERVICE"
            exit 1
          fi
          docker build -f "$dockerfilePath" -t "$(acrRegistry)/$IMAGE_NAME:$(tag)" "$buildContext"
          docker push "$(acrRegistry)/$IMAGE_NAME:$(tag)"
        done
      displayName: Build and push multiple images
      env:
        ACR_REGISTRY: '$(acrRegistry)'
        BUILD_TAG: '$(tag)'