version: '3.4'

services:
  catalogdb1:
    image: mongo
    networks:
      - amcart_network


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=changeme
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - amcart_network

  # basketdb:
  #   image: redis:alpine

  # discountdb:
  #   image: postgres

  # orderdb:
  #   image: mcr.microsoft.com/mssql/server:2017-latest

  # rabbitmq:
  #   image: rabbitmq:3-management-alpine

  amcart.catalog.api:
    image: ${DOCKER_REGISTRY-}amcart.catalog.api
    build:
      context: .
      # dockerfile: Services/Catalog/Catalog.API/Dockerfile
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      # dockerfile: C:\D\AmCart\src\Services\Catalog\Catalog.API

  amcart.productsearch.api:
    image: ${DOCKER_REGISTRY-}amcart.productsearch.api
    build:
      context: .
      dockerfile: Services/ProductSearch/AmCart.ProductSearch.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ELASTICSEARCH_URI=http://elasticsearch:9200  # Elasticsearch URI
      - ELASTICSEARCH_DEFAULT_INDEX=products  # Default index (or set to an index of your choice)
      - MongoDbConnection=mongodb://catalogdb1:27017"
    ports:
      - "8002:80"
    depends_on:
      - elasticsearch
      - catalogdb1
    networks:
      - amcart_network
    restart: always

  # basket.api:
  #   image: ${DOCKER_REGISTRY-}basketapi
  #   build:
  #     context: .
  #     dockerfile: Services/Basket/Basket.API/Dockerfile

  # discount.grpc:
  #   image: ${DOCKER_REGISTRY-}discountgrpc
  #   build:
  #     context: .
  #     dockerfile: Services/Discount/Discount.gRPC/Dockerfile

  # ordering.api:
  #   image: ${DOCKER_REGISTRY-}orderingapi
  #   build:
  #     context: .
  #     dockerfile: Services/Ordering/Ordering.API/Dockerfile
  
  # ocelotapigateway:
  #   image: ${DOCKER_REGISTRY-}ocelotapigateway
  #   build:
  #     context: .
  #     dockerfile: APIGateways/OcelotAPIGateway/Dockerfile

  # shopping.aggregator:
  #   image: ${DOCKER_REGISTRY-}shoppingaggregator
  #   build:
  #     context: .
  #     dockerfile: APIGateways/Shopping.Aggregator/Dockerfile
  #pgadmin:
  #  image: dpage/pgadmin4

  #discount.api:
  #  image: ${DOCKER_REGISTRY-}discountapi
  #  build:
  #    context: .
  #    dockerfile: Services/Discount/Discount.API/Dockerfile
  
  #portainer:
  #  image: portainer/portainer-ce

networks:
  amcart_network:
    driver: bridge

volumes:
   mongo_data:
   elasticsearch_data:
    driver: local
     # mongodb-catalogdb1:
  #   shared_database:
  #    driver: local

  # postgres_data:
  # pgadmin_data:
  # portainer_data:




